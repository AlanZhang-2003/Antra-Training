Test your Knowledge
1. Describe the problem generics address.
It avoid writing the same code with different types. Instead of writing multiple different methods with all the same implementation but different data type, Generic can be used as a template.

2. How would you create a list of strings, using the generic List class?
List<T> array = new List<T>();
List<string> array = new List<string>();

3. How many generic type parameters does the Dictionary class have?
IT should have two, they key and the value

4. True/False. When a generic class has multiple type parameters, they must all match.
False

5. What method is used to add items to a List object?
Add()

6. Name two methods that cause items to be removed from a List.
Remove()
RemoveAt()

7. How do you indicate that a class has a generic type parameter?
Add <T> to the end of the class name
public class example<T>

8. True/False. Generic classes can only have one generic type parameter.
False

9. True/False. Generic type constraints limit what can be used for the generic type.
True
public class example<T> where T : class (only classes)
public class example<T> where T : struct (only values)

10. True/False. Constraints let you use the methods of the thing you are constraining to
True